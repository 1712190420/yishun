<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xue.dao.ProductionMapper">

  <resultMap id="BaseResultMap" type="com.xue.pojo.po.Production">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="explain" jdbcType="VARCHAR" property="explain" />
    <result column="imglist" jdbcType="VARCHAR" property="imglist" />
    <result column="taglist" jdbcType="VARCHAR" property="taglist" />
    <result column="launch_time" jdbcType="VARCHAR" property="launchTime" />
    <result column="camera_area" jdbcType="VARCHAR" property="cameraArea" />
  </resultMap>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from production
    where id = #{id,jdbcType=INTEGER}
  </delete>

  <insert id="insert" parameterType="com.xue.pojo.po.Production">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into production (account, `explain`, imglist, 
      taglist, launch_time, camera_area
      )
    values (#{account,jdbcType=VARCHAR}, #{explain,jdbcType=VARCHAR}, #{imglist,jdbcType=VARCHAR}, 
      #{taglist,jdbcType=VARCHAR}, #{launchTime,jdbcType=VARCHAR}, #{cameraArea,jdbcType=VARCHAR}
      )
  </insert>

  <update id="updateByPrimaryKey" parameterType="com.xue.pojo.po.Production">
    update production
    set account = #{account,jdbcType=VARCHAR},
      `explain` = #{explain,jdbcType=VARCHAR},
      imglist = #{imglist,jdbcType=VARCHAR},
      taglist = #{taglist,jdbcType=VARCHAR},
      launch_time = #{launchTime,jdbcType=VARCHAR},
      camera_area = #{cameraArea,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, account, `explain`, imglist, taglist, launch_time, camera_area
    from production
    where id = #{id,jdbcType=INTEGER}
  </select>

  <select id="selectAll" resultMap="BaseResultMap">
    select id, account, `explain`, imglist, taglist, launch_time, camera_area
    from production
  </select>


  <select id="selectByAccount" parameterType="java.lang.String" resultMap="BaseResultMap">
    select id, account, `explain`, imglist, taglist, launch_time, camera_area
    from production
    where account = #{account,jdbcType=VARCHAR}
  </select>

  <select id="fuzzyQueryByTagList" parameterType="java.lang.String" resultMap="BaseResultMap">
    <bind name="liketag" value="'%' + tag + '%'"/>
    select id, account, `explain`, imglist, taglist, launch_time, camera_area
    from production
    where taglist like #{liketag,jdbcType=VARCHAR}
  </select>

  <select id="selectHotImg" resultType="java.lang.String">
    select imglist
    from production
    ORDER By RAND() LIMIT 3
  </select>

</mapper>