<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xue.dao.AppointmentStatusMapper">
  <resultMap id="BaseResultMap" type="com.xue.pojo.po.AppointmentStatus">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="invite_account" jdbcType="VARCHAR" property="inviteAccount" />
    <result column="invited_account" jdbcType="VARCHAR" property="invitedAccount" />
    <result column="appointment_id" jdbcType="INTEGER" property="appointmentId" />
    <result column="status" jdbcType="INTEGER" property="status" />
  </resultMap>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from appointment_status
    where id = #{id,jdbcType=INTEGER}
  </delete>

  <insert id="insert" parameterType="com.xue.pojo.po.AppointmentStatus">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into appointment_status (invite_account, invited_account, appointment_id, 
      `status`)
    values (#{inviteAccount,jdbcType=VARCHAR}, #{invitedAccount,jdbcType=VARCHAR}, #{appointmentId,jdbcType=INTEGER}, 
      #{status,jdbcType=INTEGER})
  </insert>

  <update id="updateByPrimaryKey" parameterType="com.xue.pojo.po.AppointmentStatus">
    update appointment_status
    set invite_account = #{inviteAccount,jdbcType=VARCHAR},
      invited_account = #{invitedAccount,jdbcType=VARCHAR},
      appointment_id = #{appointmentId,jdbcType=INTEGER},
      `status` = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, invite_account, invited_account, appointment_id, `status`
    from appointment_status
    where id = #{id,jdbcType=INTEGER}
  </select>

  <select id="selectAll" resultMap="BaseResultMap">
    select id, invite_account, invited_account, appointment_id, `status`
    from appointment_status
  </select>

  <delete id="deleteByAppoIdAndInviteAccount" parameterType="map">
    delete from appointment_status
    where appointment_id = #{appointmentId,jdbcType=INTEGER}
    and invite_account = #{inviteAccount,jdbcType=VARCHAR}
  </delete>


  
  <select id="slectAppoByCondition" parameterType="map" resultMap="BaseResultMap">
    select id, invite_account, invited_account, appointment_id, `status`
    from appointment_status
    <if test="inviteAccount!=null">
      where invite_account = #{inviteAccount,jdbcType=VARCHAR}
    </if>
    <if test="invitedAccount!=null">
      where invited_account = #{invitedAccount,jdbcType=VARCHAR}
    </if>
    and `status` = #{status,jdbcType=INTEGER}
  </select>

  <update id="updateStatusByCondition" parameterType="map">
    update appointment_status
    set `status` = #{status,jdbcType=INTEGER}
    where appointment_id = #{appointmentId,jdbcType=INTEGER}
    and invite_account = #{inviteAccount,jdbcType=VARCHAR}
    and `status` = #{oldstatus,jdbcType=INTEGER}
  </update>


</mapper>